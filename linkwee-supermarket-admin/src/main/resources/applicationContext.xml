<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:reg="http://www.dangdang.com/schema/ddframe/reg" xmlns:job="http://www.dangdang.com/schema/ddframe/job"
       xsi:schemaLocation="
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd
    http://www.dangdang.com/schema/ddframe/reg 
    http://www.dangdang.com/schema/ddframe/reg/reg.xsd 
    http://www.dangdang.com/schema/ddframe/job 
    http://www.dangdang.com/schema/ddframe/job/job.xsd">
    
   

    <!-- 自动扫描linkwee包 ,将带有注解的类 纳入spring容器管理 -->
    <context:component-scan base-package="com.linkwee"></context:component-scan>

    <!-- 引入配置文件 -->
    <bean  class="com.linkwee.xoss.helper.SpringPropertyPlaceholder" id="propertyConfigurer">
		<property name="locations">
			<list>
                <value>classpath:config/*.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>
	
	<!-- 图形验证码 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">    
        <property name="config">    
            <bean class="com.google.code.kaptcha.util.Config">    
                <constructor-arg>    
                    <props>    
                        <prop key="kaptcha.textproducer.font.color">red</prop>    
                        <prop key="kaptcha.image.width">200</prop>    
                        <prop key="kaptcha.image.height">50</prop>
                        <prop key="kaptcha.textproducer.font.size">40</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>    
                    </props>    
                </constructor-arg>    
            </bean>    
        </property>    
    </bean>

	<!-- redis cluster -->
	<bean name="genericObjectPoolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig" >
			<property name="maxWaitMillis" value="-1" />
			<property name="maxTotal" value="1000" />
			<property name="minIdle" value="8" />
			<property name="maxIdle" value="100" />
	</bean>

	<bean id="jedisCluster" class="com.linkwee.xoss.util.JedisClusterFactoryHelper">
		<property name="addressConfig">
			<value>classpath:config/redis-cluster.properties</value>
		</property>
		<!--  属性文件里  key的前缀 -->
		<property name="addressKeyPrefix" value="redisAddress" />   
		<property name="timeout" value="300000" />
		<property name="maxRedirections" value="6" />
		<property name="genericObjectPoolConfig" ref="genericObjectPoolConfig" />
	</bean>
	
    <!-- dataSource 配置 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${ds.initialSize}"/>
        <property name="minIdle" value="${ds.minIdle}"/>
        <property name="maxActive" value="${ds.maxActive}"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${ds.maxWait}"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${ds.timeBetweenEvictionRunsMillis}"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${ds.minEvictableIdleTimeMillis}"/>

        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
    </bean>

    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" p:dataSource-ref="dataSource"
          p:configLocation="classpath:mybatis-config.xml"
          p:mapperLocations="classpath:com/linkwee/web/dao/*.xml"/>

    <!-- spring与mybatis整合配置，扫描所有dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="com.linkwee.web.dao"
          p:sqlSessionFactoryBeanName="sqlSessionFactory"/>

    <!-- 对dataSource 数据源进行事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <!-- 事务管理 通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 对insert,update,delete 开头的方法进行事务管理,只要有异常就回滚 -->
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <!-- select,count开头的方法,开启只读,提高数据库访问性能 -->
            <tx:method name="select*" read-only="true"/>
            <tx:method name="count*" read-only="true"/>
            <!-- 对其他方法 使用默认的事务管理 -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 事务 aop 配置 -->
    <aop:config>
        <aop:pointcut id="serviceMethods" expression="execution(* com.linkwee.web.service..*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>
    </aop:config>
    
    <!-- 配置使Spring采用CGLIB代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 启用对事务注解的支持 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Cache配置 -->
    <cache:annotation-driven cache-manager="cacheManager"/>
    <bean id="ehCacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
          p:configLocation="classpath:ehcache.xml"/>
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
          p:cacheManager-ref="ehCacheManagerFactory"/>
          
       <!-- threadPool -->    
	<!-- <import resource="spring_threadPool.xml"/> -->
    
    <!-- 分布式定时任务调度 开始 - (基于ZooKeeper)-  -->
	<!-- 配置作业注册中心 -->
    <!-- <reg:zookeeper id="regCenter" server-lists="${zookeeperAddress}" namespace="dd-job" base-sleep-time-milliseconds="1000" max-sleep-time-milliseconds="3000" max-retries="3" /> -->
    <!-- 配置作业注册中心(当当不支持placeholder，所以使用Spring的方式配置) -->
    <bean id="regCenter" class="com.dangdang.ddframe.reg.zookeeper.ZookeeperRegistryCenter" init-method="init">
        <constructor-arg>
            <bean class="com.dangdang.ddframe.reg.zookeeper.ZookeeperConfiguration">
                <property name="serverLists" value="${zookeeperAddress}" />
                <property name="namespace" value="dd-job" />
                <property name="baseSleepTimeMilliseconds" value="1000" />
                <property name="maxSleepTimeMilliseconds" value="3000" />
                <property name="maxRetries" value="3" />
            </bean>
        </constructor-arg>
    </bean>  
      
   	<!-- 配置简单作业-->
  <!--   <job:simple id="simpleElasticJob" class="com.linkwee.job.MySimpleJob" registry-center-ref="regCenter" cron="0/30 * * * * ?"   sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" /> -->
    <job:simple id="rejectedExecuteRetryJob" class="com.linkwee.job.RejectedExecuteRetryJob" registry-center-ref="regCenter" cron="30 0/30 * * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C"  description="异常重试"/>
    <job:simple id="everyDayFeeCalcJob" class="com.linkwee.job.EveryDayFeeCalcJob" registry-center-ref="regCenter" cron="0 10 1 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="每日佣金计算"/>
    <job:simple id="checkExpirationRedpacketJob" class="com.linkwee.job.CheckExpirationRedpacketJob" registry-center-ref="regCenter" cron="20 */1 * * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="红包过期检查"/>
    <job:simple id="advanceSendRedPacketExpireMsgJob" class="com.linkwee.job.AdvanceSendRedPacketExpireMsgJob" registry-center-ref="regCenter" cron="0 5 10 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="红包过期提前提醒消息"/>
    <job:simple id="pushMessgeJob" class="com.linkwee.job.PushMessageThreadJob" registry-center-ref="regCenter" cron="0 5 7,8,9,10,11,12,13,14,15,16,17,18,19,20 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C"/>  
    <job:simple id="acWithdrawApplyJob" class="com.linkwee.job.AcWithdrawApplyJob" registry-center-ref="regCenter" cron="0 0 7,10,12,14,16,18,20,22 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C"/>  
    <job:simple id="sysPushMessgeJob" class="com.linkwee.job.SysPushMessageThreadJob" registry-center-ref="regCenter" cron="0 20 1 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C"/>
    <!--机构佣金修改定时任务  (cron = "0 0 0/1 * * ?")//每小时  cron="0 0 */1 * * ?"-->
    <job:simple id="modifyOrgFeeRatioJob" class="com.linkwee.job.ModifyOrgFeeRatioJob" registry-center-ref="regCenter" cron="40 */1 * * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="机构佣金修改定时任务"/>
    <!-- 回款提前提醒  0 0 8 * * ?-->
    <job:simple id="advancePaymentReminderJob" class="com.linkwee.job.AdvancePaymentReminderJob" registry-center-ref="regCenter" cron="0 1 8 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="回款提前提醒"/>
     <job:simple id="advanceSendRedPacketByDate" class="com.linkwee.job.AdvanceSendRedPacketByDate" registry-center-ref="regCenter" cron="0 5 8 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C"/> 
     <!-- <job:simple id="advanceSendRedPacketByDate" class="com.linkwee.job.AdvanceSendRedPacketByDate" registry-center-ref="regCenter" cron="0 */1 * * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" /> -->
     <job:simple id="advanceSendRedPacketByNow" class="com.linkwee.job.AdvanceSendRedPacketByNow" registry-center-ref="regCenter" cron="58 */1 * * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C"/>
    <job:simple id="weiXinMsgJob" class="com.linkwee.job.WeiXinMsgJob" registry-center-ref="regCenter" cron="0 56 */1 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" />
   <!--  <job:simple id="weeksFeeRankListJob" class="com.linkwee.job.WeeksFeeRankListJob" registry-center-ref="regCenter" cron="0 0 0 ? * MON" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" /> -->
    <!-- 排行榜数据  [已取消]-->
    <!-- <job:simple id="rankListJob" class="com.linkwee.job.RankListJob" registry-center-ref="regCenter" cron="0 0 0 1,6,10,16,20,26 * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" /> -->
    <!-- 计算理财师职级  每月-->
    <job:simple id="calculateCfpLevelJob" class="com.linkwee.job.CalculateCfpLevelJob" registry-center-ref="regCenter" cron="0 10 0 1 * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="计算理财师职级  每月"/>
    <!-- 计算理财师职级  每天-->
    <job:simple id="calculateCfpLevelJobDay" class="com.linkwee.job.CalculateCfpLevelDayJob" registry-center-ref="regCenter" cron="0 40 1 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="计算理财师职级  每天"/>
    <!-- 累计发放佣金  每天-->
    <job:simple id="homePageCommissionJobDay" class="com.linkwee.job.HomePageCommissionJob" registry-center-ref="regCenter" cron="0 8 2 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="累计发放佣金  每天"/>
<!--     基金订单列表拉取定时任务
    <job:simple id="ifastFundsGetOrderListJob" class="com.linkwee.job.IfastFundsGetOrderListJob" registry-center-ref="regCenter" cron="0 38 */1 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="基金订单列表拉取定时任务"/>
    基金订单列表状态更新定时任务
    <job:simple id="updateIfastFundsGetOrderListJob" class="com.linkwee.job.UpdateIfastFundsGetOrderListJob" registry-center-ref="regCenter" cron="0 36 */12 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="基金订单列表状态更新定时任务"/> -->
    <!-- 职级体验券每天凌晨  -->                                                                                                         
    <job:simple id="actJobGradeVoucherJob" class="com.linkwee.job.ActJobGradeVoucherJob" registry-center-ref="regCenter" cron="0 50 0 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="职级体验券每天凌晨"/>
    <!-- 职级体验券每天晚上  -->                                                                                                         
    <job:simple id="actExpiresTimeJobGradeVoucherJob" class="com.linkwee.job.ActExpiresTimeJobGradeVoucherJob" registry-center-ref="regCenter" cron="0 40 23 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="职级体验券每天晚上"/>
	<!-- 生日短信提醒  -->
	<job:simple id="actBirthdayReminderJob" class="com.linkwee.job.ActBirthdayReminderJob" registry-center-ref="regCenter" cron="0 5 9 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="生日短信提醒"/>
    <!-- 生日发放18元投资红包  -->
    <job:simple id="actBirthdayRedpacketJob" class="com.linkwee.job.ActBirthdayRedpacketJob" registry-center-ref="regCenter" cron="30 1 0 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="生日发放18元投资红包"/>
	<!-- 合伙人团队及等级确认  -->
    <job:simple id="salesOrgDepthJob" class="com.linkwee.job.SalesOrgDepthJob" registry-center-ref="regCenter" cron="0 5 1 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" disabled="true" description="合伙人团队及等级确认" />
	<!-- 注册三天未投资提醒  -->
    <job:simple id="threeDayWithoutInvestRemindJob" class="com.linkwee.job.ThreeDayWithoutInvestRemindJob" registry-center-ref="regCenter" cron="0 0 21 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="注册三天未投资提醒"/>	
	<!-- 劳动节热爱工作人数  -->
	<!--<job:simple id="laborDayLoveWorkNumJob" class="com.linkwee.job.LaborDayLoveWorkNumJob" registry-center-ref="regCenter" cron="50 */1 * * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="劳动节热爱工作人数"/>-->
    <!-- 赛事竞猜投票数  -->
    <!--<job:simple id="eventGuessingJob" class="com.linkwee.job.EventGuessingJob" registry-center-ref="regCenter" cron="33 */5 * * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="赛事竞猜投票数"/>-->
    <!-- 签到提醒推送  -->
    <job:simple id="signRemindPushMessageJob" class="com.linkwee.job.SignRemindPushMessageJob" registry-center-ref="regCenter" cron="0 0 9 * * ?" sharding-total-count="1" sharding-item-parameters="0=A,1=B,2=C" description="签到提醒推送"/>
    <!-- 分布式定时任务调度 结束 - (基于ZooKeeper)-  -->
   
</beans>
