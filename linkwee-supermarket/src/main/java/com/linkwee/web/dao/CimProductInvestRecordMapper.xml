<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linkwee.web.dao.CimProductInvestRecordMapper">
	<!-- Result Map-->
	<resultMap  type="com.linkwee.web.model.cim.CimProductInvestRecord" id="BaseResultMap">
		<result column="id" property="id" jdbcType="INTEGER"/>
		<result column="invest_id" property="investId" jdbcType="VARCHAR"/>
		<result column="invest_record_no" property="investRecordNo" jdbcType="VARCHAR"/>
		<result column="tx_id" property="txId" jdbcType="VARCHAR"/>
		<result column="user_id" property="userId" jdbcType="VARCHAR"/>
		<result column="product_id" property="productId" jdbcType="VARCHAR"/>
		<result column="third_product_id" property="thirdProductId" jdbcType="VARCHAR"/>
		<result column="product_fee_rate" property="productFeeRate" jdbcType="DECIMAL"/>
		<result column="invest_amt" property="investAmt" jdbcType="DECIMAL"/>
		<result column="profit" property="profit" jdbcType="DECIMAL"/>
		<result column="accurate_profit" property="accurateProfit" jdbcType="DECIMAL"/>
		<result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
		<result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
		<result column="status" property="status" />
		<result column="platfrom" property="platfrom" jdbcType="VARCHAR"/>
		<result column="is_platfrom_first_invest" property="isPlatfromFirstInvest" jdbcType="INTEGER"/>
		<result column="is_first_invest" property="isFirstInvest" jdbcType="INTEGER"/>
		<result column="biz_time" property="bizTime" jdbcType="TIMESTAMP"/>
		<result column="create_time" property="createTime"  jdbcType="TIMESTAMP"/>
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
		
	</resultMap>
	
	<resultMap  type="com.linkwee.web.model.crm.GoodTransResp" id="GoodTransResultMap">
		<result column="invest_id" property="billId" jdbcType="VARCHAR"/>
		<result column="invest_amt" property="amount" jdbcType="DECIMAL"/>
		<result column="create_time" property="investTime"  jdbcType="TIMESTAMP"/>
		<result column="user_name" property="userName" jdbcType="VARCHAR"/>
		<result column="mobile" property="mobile" jdbcType="VARCHAR"/>
	</resultMap>
 	
  <sql id="Base_Column_List">
    <trim suffixOverrides=",">
	    	id,
	    	invest_id,
	    	invest_record_no,
	    	tx_id,
	    	user_id,
	    	product_id,
	    	third_product_id,
	    	invest_amt,
	    	profit,
	    	accurate_profit,
	    	start_time,
	    	end_time,
	    	status,
	    	platfrom,
	    	biz_time,
	    	is_first_invest,
	    	create_time,
	    	update_time,
    </trim>
  </sql>  
  
  <sql id="Base_Condition">
		<if test=" null != id ">
			and id = #{id}
		</if>
		<if test=" null != investId and ''!= investId  ">
			and invest_id = #{investId}
		</if>
		<if test=" null != investRecordNo and ''!= investRecordNo  ">
			and invest_record_no = #{investRecordNo}
		</if>
		<if test=" null != txId and ''!= txId  ">
			and tx_id = #{txId}
		</if>
		<if test=" null != userId and ''!= userId  ">
			and user_id = #{userId}
		</if>
		<if test=" null != productId and ''!= productId  ">
			and product_id = #{productId}
		</if>
		<if test=" null != thirdProductId and ''!= thirdProductId  ">
			and third_product_id = #{thirdProductId}
		</if>
		<if test=" null != investAmt ">
			and invest_amt = #{investAmt}
		</if>
		<if test=" null != profit ">
			and profit = #{profit}
		</if>
		<if test=" null != accurateProfit ">
			and accurate_profit = #{accurateProfit}
		</if>
		<if test=" null != startTime ">
			and start_time = #{startTime}
		</if>
		<if test=" null != endTime ">
			and end_time = #{endTime}
		</if>
		<if test=" null != status ">
			and status = #{status}
		</if>
		<if test=" null != platfrom and ''!= platfrom  ">
			and platfrom = #{platfrom}
		</if>
		<if test=" null != bizTime ">
			and biz_time = #{bizTime}
		</if>
		<if test=" null != isFirstInvest ">
			and is_first_invest = #{isFirstInvest}
		</if>
		<if test=" null != createTime ">
			and create_time = #{createTime}
		</if>
		<if test=" null != updateTime ">
			and update_time = #{updateTime}
		</if>
  </sql>
  
  <select id="selectOneByCondition" resultMap="BaseResultMap"  parameterType="com.linkwee.web.model.cim.CimProductInvestRecord">
		select <include refid="Base_Column_List" /> from tcim_product_invest_record 
		where 1=1 <include refid="Base_Condition" />
  </select>
  
  <select id="selectByCondition" resultMap="BaseResultMap"  parameterType="com.linkwee.web.model.cim.CimProductInvestRecord">
		select <include refid="Base_Column_List" /> from tcim_product_invest_record 
		where 1=1 <include refid="Base_Condition" />
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tcim_product_invest_record
    where  id = #{0}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tcim_product_invest_record
    where id = #{0}
  </delete>

  <insert id="insert" parameterType="com.linkwee.web.model.cim.CimProductInvestRecord" >
    INSERT INTO tcim_product_invest_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			 	<if test=" null != id ">
					id,
				</if>
			 	<if test=" null != investId and ''!= investId  ">
					invest_id,
				</if>
			 	<if test=" null != investRecordNo and ''!= investRecordNo  ">
					invest_record_no,
				</if>
				<if test=" null != txId and ''!= txId  ">
					tx_id,
				</if>
			 	<if test=" null != userId and ''!= userId  ">
					user_id,
				</if>
			 	<if test=" null != productId and ''!= productId  ">
					product_id,
				</if>
			 	<if test=" null != thirdProductId and ''!= thirdProductId  ">
					third_product_id,
				</if>
			 	<if test=" null != investAmt ">
					invest_amt,
				</if>
			 	<if test=" null != profit ">
					profit,
				</if>
			 	<if test=" null != accurateProfit ">
					accurate_profit,
				</if>
			 	<if test=" null != startTime ">
					start_time,
				</if>
			 	<if test=" null != endTime ">
					end_time,
				</if>
			 	<if test=" null != status ">
					status,
				</if>
			 	<if test=" null != platfrom and ''!= platfrom  ">
					platfrom,
				</if>
				<if test=" null != isPlatfromFirstInvest and ''!= isPlatfromFirstInvest  ">
					is_platfrom_first_invest,
				</if>
				
				<if test=" null != isFirstInvest ">
					 is_first_invest,
				</if>
			 	<if test=" null != bizTime ">
					biz_time,
				</if>
			 	<if test=" null != createTime ">
					create_time,
				</if>
			 	<if test=" null != updateTime ">
					update_time,
				</if>
		</trim>
		<trim prefix="VALUES(" suffix=")" suffixOverrides=",">
			 	<if test=" null != id ">
					 	#{id},
				</if>
			 	<if test=" null != investId and ''!= investId  ">
					 	#{investId},
				</if>
			 	<if test=" null != investRecordNo and ''!= investRecordNo  ">
					 	#{investRecordNo},
				</if>
				<if test=" null != txId and ''!= txId  ">
					 	#{txId},
				</if>
			 	<if test=" null != userId and ''!= userId  ">
					 	#{userId},
				</if>
			 	<if test=" null != productId and ''!= productId  ">
					 	#{productId},
				</if>
			 	<if test=" null != thirdProductId and ''!= thirdProductId  ">
					 	#{thirdProductId},
				</if>
			 	<if test=" null != investAmt ">
					 	#{investAmt},
				</if>
			 	<if test=" null != profit ">
					 	#{profit},
				</if>
			 	<if test=" null != accurateProfit ">
					 	#{accurateProfit},
				</if>
			 	<if test=" null != startTime ">
					 	#{startTime},
				</if>
			 	<if test=" null != endTime ">
					 	#{endTime},
				</if>
			 	<if test=" null != status ">
					 	#{status},
				</if>
			 	<if test=" null != platfrom and ''!= platfrom  ">
					 	#{platfrom},
				</if>
				<if test=" null != isPlatfromFirstInvest and ''!= isPlatfromFirstInvest  ">
					#{isPlatfromFirstInvest},
				</if>
				<if test=" null != isFirstInvest ">
				 		#{isFirstInvest},
				</if>
			 	<if test=" null != bizTime ">
					 	#{bizTime},
				</if>
			 	<if test=" null != createTime ">
					 	#{createTime},
				</if>
			 	<if test=" null != updateTime ">
					 	#{updateTime},
				</if>
		</trim>
  </insert>
  
  <insert id="insertSelective" parameterType="com.linkwee.web.model.cim.CimProductInvestRecord" useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO tcim_product_invest_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			 	<if test=" null != id ">
					id,
				</if>
			 	<if test=" null != investId and ''!= investId  ">
					invest_id,
				</if>
			 	<if test=" null != investRecordNo and ''!= investRecordNo  ">
					invest_record_no,
				</if>
				<if test=" null != txId and ''!= txId  ">
					tx_id,
				</if>
				
			 	<if test=" null != userId and ''!= userId  ">
					user_id,
				</if>
			 	<if test=" null != productId and ''!= productId  ">
					product_id,
				</if>
			 	<if test=" null != thirdProductId and ''!= thirdProductId  ">
					third_product_id,
				</if>
				<if test=" null != productFeeRate ">
					product_fee_rate,
				</if>
			 	<if test=" null != investAmt ">
					invest_amt,
				</if>
				<if test=" null != investAmt ">
					stock_invest_amt,
				</if>
			 	<if test=" null != profit ">
					profit,
				</if>
			 	<if test=" null != accurateProfit ">
					accurate_profit,
				</if>
			 	<if test=" null != startTime ">
					start_time,
				</if>
			 	<if test=" null != endTime ">
					end_time,
				</if>
			 	<if test=" null != status ">
					status,
				</if>
			 	<if test=" null != platfrom and ''!= platfrom  ">
					platfrom,
				</if>
				<if test=" null != isPlatfromFirstInvest and ''!= isPlatfromFirstInvest  ">
					is_platfrom_first_invest,
				</if>
				<if test=" null != isFirstInvest ">
				 	is_first_invest,
				</if>
			 	<if test=" null != bizTime ">
					biz_time,
				</if>
			 	<if test=" null != createTime ">
					create_time,
				</if>
			 	<if test=" null != updateTime ">
					update_time,
				</if>
		</trim>
		<trim prefix="VALUES(" suffix=")" suffixOverrides=",">
			 	<if test=" null != id ">
					 	#{id},
				</if>
			 	<if test=" null != investId and ''!= investId  ">
					 	#{investId},
				</if>
			 	<if test=" null != investRecordNo and ''!= investRecordNo  ">
					 	#{investRecordNo},
				</if>
				<if test=" null != txId and ''!= txId  ">
						#{txId},
				</if>
			 	<if test=" null != userId and ''!= userId  ">
					 	#{userId},
				</if>
			 	<if test=" null != productId and ''!= productId  ">
					 	#{productId},
				</if>
			 	<if test=" null != thirdProductId and ''!= thirdProductId  ">
					 	#{thirdProductId},
				</if>
				<if test=" null != productFeeRate ">
						#{productFeeRate},
				</if>
			 	<if test=" null != investAmt ">
					 	#{investAmt},
				</if>
				<if test=" null != investAmt ">
					 	#{investAmt},
				</if>
			 	<if test=" null != profit ">
					 	#{profit},
				</if>
			 	<if test=" null != accurateProfit ">
					 	#{accurateProfit},
				</if>
			 	<if test=" null != startTime ">
					 	#{startTime},
				</if>
			 	<if test=" null != endTime ">
					 	#{endTime},
				</if>
			 	<if test=" null != status ">
					 	#{status},
				</if>
			 	<if test=" null != platfrom and ''!= platfrom  ">
					 	#{platfrom},
				</if>
				<if test=" null != isPlatfromFirstInvest and ''!= isPlatfromFirstInvest  ">
					#{isPlatfromFirstInvest},
				</if>
				<if test=" null != isFirstInvest ">
				 		#{isFirstInvest},
				</if>
			 	<if test=" null != bizTime ">
					 	#{bizTime},
				</if>
			 	<if test=" null != createTime ">
					 	#{createTime},
				</if>
			 	<if test=" null != updateTime ">
					 	#{updateTime},
				</if>
		</trim>
	</insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.linkwee.web.model.cim.CimProductInvestRecord" >
  		UPDATE tcim_product_invest_record
		<set>
			<trim suffixOverrides=",">
					<if test=" null != investId and ''!= investId  ">
						invest_id = #{investId},
					</if>
					<if test=" null != investRecordNo and ''!= investRecordNo  ">
						invest_record_no = #{investRecordNo},
					</if>
					<if test=" null != userId and ''!= userId  ">
						user_id = #{userId},
					</if>
					<if test=" null != productId and ''!= productId  ">
						product_id = #{productId},
					</if>
					<if test=" null != thirdProductId and ''!= thirdProductId  ">
						third_product_id = #{thirdProductId},
					</if>
					<if test=" null != investAmt ">
						invest_amt = #{investAmt},
					</if>
					<if test=" null != profit ">
						profit = #{profit},
					</if>
					<if test=" null != accurateProfit ">
						accurate_profit = #{accurateProfit},
					</if>
					<if test=" null != startTime ">
						start_time = #{startTime},
					</if>
					<if test=" null != endTime ">
						end_time = #{endTime},
					</if>
					<if test=" null != status ">
						status = #{status},
					</if>
					<if test=" null != platfrom and ''!= platfrom  ">
						platfrom = #{platfrom},
					</if>
					<if test=" null != isFirstInvest ">
						is_first_invest = #{isFirstInvest}
					</if>
					<if test=" null != bizTime ">
						biz_time = #{bizTime},
					</if>
					<if test=" null != createTime ">
						create_time = #{createTime},
					</if>
					<if test=" null != updateTime ">
						update_time = #{updateTime},
					</if>
			</trim>
		</set>
		<where>
			 id = #{id}
		</where>
	</update>
	
	
	<update id="updateInvestRecordEndTimeByProductId">
			UPDATE tcim_product_invest_record  SET
				end_time = #{endTime},
				update_time=now()	
			WHERE product_id = #{productId}
	</update>
	
	<!-- 更新回款状态 -->
	<update id="updateRepaymentStatus">
	
		UPDATE tcim_product_invest_record  SET
		<if test="status == 2">
			status=2,stock_invest_amt = (CASE  WHEN stock_invest_amt - #{repaymentAmount} >0  then stock_invest_amt - #{repaymentAmount} ELSE 0 END),accurate_profit=accurate_profit + #{accurateProfit},
		</if>
		<if test="status == 3">
			status=3,stock_invest_amt=0,accurate_profit=accurate_profit + #{accurateProfit}<!-- ,end_time=#{repaymentTime} -->,
		</if>
		<if test="status == 4">
			stock_invest_amt = (CASE  WHEN stock_invest_amt - #{repaymentAmount} >0  then stock_invest_amt - #{repaymentAmount} ELSE 0 END),
		</if>
		update_time=now()	WHERE invest_record_no=#{investRecordNo}
	</update>
	
	<!-- 募集失败更新预期收益为0 -->
	<update id="updateBorrowRefuseInvestProfit">	
		UPDATE tcim_product_invest_record  SET profit = 0 WHERE invest_record_no=#{investRecordNo}
	</update>
  
	<update id="updateByPrimaryKey" parameterType="com.linkwee.web.model.cim.CimProductInvestRecord" >
	    UPDATE tcim_product_invest_record
	   <set>
			<trim suffixOverrides=",">
					<if test=" null != investId and ''!= investId  ">
						invest_id = #{investId},
					</if>
					<if test=" null != investRecordNo and ''!= investRecordNo  ">
						invest_record_no = #{investRecordNo},
					</if>
					<if test=" null != userId and ''!= userId  ">
						user_id = #{userId},
					</if>
					<if test=" null != productId and ''!= productId  ">
						product_id = #{productId},
					</if>
					<if test=" null != thirdProductId and ''!= thirdProductId  ">
						third_product_id = #{thirdProductId},
					</if>
					<if test=" null != investAmt ">
						invest_amt = #{investAmt},
					</if>
					<if test=" null != profit ">
						profit = #{profit},
					</if>
					<if test=" null != accurateProfit ">
						accurate_profit = #{accurateProfit},
					</if>
					<if test=" null != startTime ">
						start_time = #{startTime},
					</if>
					<if test=" null != endTime ">
						end_time = #{endTime},
					</if>
					<if test=" null != status ">
						status = #{status},
					</if>
					<if test=" null != platfrom and ''!= platfrom  ">
						platfrom = #{platfrom},
					</if>
					<if test=" null != isFirstInvest ">
						is_first_invest = #{isFirstInvest}
					</if>
					<if test=" null != bizTime ">
						biz_time = #{bizTime},
					</if>
					<if test=" null != createTime ">
						create_time = #{createTime},
					</if>
					<if test=" null != updateTime ">
						update_time = #{updateTime},
					</if>
			</trim>
		</set>
		<where>
			id = #{0}
		</where>
	  </update>

	<!-- 分页条件查询 -->
    <select id="selectBySearchInfo" resultMap="BaseResultMap" parameterType="com.linkwee.core.datatable.DataTable">
        SELECT
        <include refid="Base_Column_List" />
        FROM tcim_product_invest_record
        <where> 
        <if test="dt.search!=null">  
                name LIKE CONCAT('%','${dt.search.value}','%' )  
         </if>  
         <if test="dt.order!=null">  
               <foreach collection="dt.order" index="index" item="item"
                    open="order by" separator="," close=" ">
                    ${item.name} ${item.dir} 
                </foreach>
         </if>  
        </where>
    </select>
    
     <select id="selectRefInvestRecord" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT distinct user_id FROM tcim_product_invest_record
        <where>
			<foreach item="item" index="index" collection="list" open=" user_id in ("
				separator="," close=") ">
				#{item}
			</foreach>
		</where> 
    </select>

    
     <select id="queryFirsInvestTime" resultType="int" >
        SELECT count(id) FROM tcim_product_invest_record 
        <where>
			user_id = #{userId} and   platfrom =#{orgNumber}
		</where> 
    </select>
    

    
    <!-- 查询客户投资总额 -->
    <select id="queryCustomerInvestTotalAmount" resultType="BigDecimal">
    	SELECT IFNULL(SUM(t.invest_amt),0) FROM tcim_product_invest_record t WHERE t.user_id=#{userId}
    </select>
    
    <!-- 查询当前在投总额-->
     <select id="queryCurrInvestAmount" resultType="BigDecimal">
    	SELECT IFNULL(SUM(t.invest_amt),0) FROM tcim_product_invest_record t WHERE t.user_id=#{userId} and t.status=1
    </select>
    
     <!-- 查询客户投资收益 -->
    <select id="queryCustomerInvestTotalProfit" resultType="BigDecimal">
    	 SELECT IFNULL(SUM(t.profit),0) FROM tcim_product_invest_record t WHERE t.user_id=#{userId} AND t.status IN (1,2,3)
    </select> 
    
    <!-- 查询客户投资记录 -->
    <select id="queryCustomerInvestRecord" resultType="com.linkwee.api.response.tc.InvestRecordResponse">
    	SELECT
			p.product_id productId,
			p.dead_line_min_value minDay,
			p.dead_line_max_value maxDay,
			p.dead_line_min_self_defined selfMinDay,
			p.dead_line_max_self_defined selfMaxDay,
			p.is_fixed_deadline dayType,
			p.product_name productName,
			t.platfrom,
			o.`name` platfromName,
			t.invest_amt investAmount,
			t.profit profit,
			t.start_time startDate,
			t.end_time endDate,
			t.update_time updateDate
		FROM
			tcim_product_invest_record t
		LEFT JOIN tcim_product p ON t.product_id = p.product_id
		LEFT JOIN tcim_org_info o ON t.platfrom = o.org_number
		WHERE
			t.user_id = #{userId}
		AND t.status = #{status}
    	ORDER BY t.start_time desc
    	 
    </select> 
    
    <select id="queryCfplannerCustomerInvestRecordStatistic" resultType="com.linkwee.api.response.tc.CustomerInvestRecordStatisticResponse" >     	
		SELECT
			IFNULL(SUM(f.product_amount),0) total,
			IFNULL(SUM(f.fee_amount),0) feeAmt,
			COUNT(f.biz_id) count,
			COUNT(DISTINCT f.investor_id) number
		FROM
			tcim_fee f 
		WHERE
			f.profit_cfplanner_id = #{userId}				
		AND f.fee_type = '1001'
		
		<if test=" null != dateType ">
				<if test=" 1 == dateType ">
					 and year(f.create_time)=year(#{date})
				</if>
				<if test=" 2 == dateType ">
					 and year(f.create_time)=year(#{date}) and QUARTER(f.create_time)=QUARTER(#{date})
				</if>
				<if test=" 3 == dateType ">
					 and DATE_FORMAT(f.create_time,'%Y-%m')=DATE_FORMAT(#{date},'%Y-%m')
				</if>
				<if test=" 4 == dateType ">
					 and DATE_FORMAT(f.create_time,'%Y-%m-%d')=DATE_FORMAT(#{date},'%Y-%m-%d')
				</if>
				<if test=" 5 == dateType ">
					 AND f.create_time BETWEEN date_sub(curdate(),interval WEEKDAY(curdate()) day) AND curdate()
				</if>
			</if>
		GROUP BY
			f.fee_type
    </select>
    
    
	<select id="queryCfplannerCustomerInvestRecord" resultType="com.linkwee.api.response.tc.CustomerInvestRecordResponse">     	
		SELECT
			u.user_id uid,
			u.user_name name,
			u.mobile mobile,
			iu.head_image image,
			p.product_name productName,
			p.is_flow isflow,
			f.fee_rate feeRate,
			p.flow_max_rate flowMaxRate,
			p.flow_min_rate flowMinRate,
			r.start_time date,
			f.product_amount amt
			FROM
				tcim_fee f 
				LEFT JOIN tcim_product_invest_record r ON f.bill_id=r.invest_id 
			  	LEFT JOIN tcrm_user_info u ON f.investor_id=u.user_id
			  	LEFT JOIN tcrm_investor iu ON f.investor_id=iu.user_id
				LEFT JOIN tcim_product p ON f.product_id =p.product_id
			WHERE
				f.profit_cfplanner_id = #{userId}
			
			AND f.fee_type = '1001' 
			
			<if test=" null != dateType ">
				<if test=" 1 == dateType ">
					 AND year(f.create_time)=year(#{date})
				</if>
				<if test=" 2 == dateType ">
					 AND year(f.create_time)=year(#{date}) and QUARTER(f.create_time)=QUARTER(#{date})
				</if>
				<if test=" 3 == dateType ">
					 AND DATE_FORMAT(f.create_time,'%Y-%m')=DATE_FORMAT(#{date},'%Y-%m')
				</if>
				<if test=" 4 == dateType ">
					 AND DATE_FORMAT(f.create_time,'%Y-%m-%d')=DATE_FORMAT(#{date},'%Y-%m-%d')
				</if>
				<if test=" 5 == dateType ">
					 AND f.create_time BETWEEN date_sub(curdate(),interval WEEKDAY(curdate()) day) AND curdate()
				</if>
			</if>
			ORDER BY f.create_time DESC
    </select>
    
    
    
    <select id="queryCfplannerInvestCustomerDetail" resultType="com.linkwee.api.response.tc.CustomerInvestRecordResponse">     	
		SELECT
		u.user_id uid,
		u.user_name name,
		u.mobile mobile,
		iu.head_image image,
		COUNT(biz_id) count,
		IFNULL(sum(f.product_amount),0) amt
		FROM
			tcim_fee f  
			LEFT JOIN tcrm_user_info u ON f.investor_id=u.user_id 
			LEFT JOIN tcrm_investor iu ON f.investor_id=iu.user_id
		WHERE
			f.profit_cfplanner_id = #{userId}
		AND f.fee_type = '1001' 
		<if test=" null != dateType ">
			<if test=" 1 == dateType ">
				 AND year(f.create_time)=year(#{date})
			</if>
			<if test=" 2 == dateType ">
				 AND year(f.create_time)=year(#{date}) and QUARTER(f.create_time)=QUARTER(#{date})
			</if>
			<if test=" 3 == dateType ">
				 AND DATE_FORMAT(f.create_time,'%Y-%m')=DATE_FORMAT(#{date},'%Y-%m')
			</if>
			<if test=" 4 == dateType ">
				 AND DATE_FORMAT(f.create_time,'%Y-%m-%d')=DATE_FORMAT(#{date},'%Y-%m-%d')
			</if>
			<if test=" 5 == dateType ">
					 AND f.create_time BETWEEN date_sub(curdate(),interval WEEKDAY(curdate()) day) AND curdate()
			</if>
		</if>
		 GROUP BY f.investor_id ORDER BY amt DESC
    </select>
	
	
	<select id="queryCustomerRepayment" resultType="com.linkwee.api.response.tc.RepaymentResponse">
		SELECT
			u.mobile mobile,
			u.user_name NAME,
			i.head_image image,
			a.invest_amt amt,
			a.profit profit,
			a.start_time startDate,
			a.end_time endDate,
			b.fee_amount feeAmt,
			b.fee_rate feeRate,
			d.product_name productName,
			d.is_flow isflow,
			d.flow_max_rate flowMaxRate,
			d.flow_min_rate flowMinRate,
			is_redemption investState,
			o.`name` platfrom
		FROM
			tcrm_investor i
		LEFT JOIN tcrm_user_info u ON i.user_id = u.user_id
		LEFT JOIN tcim_product_invest_record a ON i.user_id = a.user_id
		LEFT JOIN tcim_fee b ON b.profit_cfplanner_id = i.cfplanner AND a.invest_id = b.bill_id
		AND b.fee_type = '1001'
		LEFT JOIN tcim_product d ON a.product_id = d.product_id
		LEFT JOIN tcim_org_info o ON a.platfrom=o.org_number
		WHERE
		1=1 
		<if test="null != customerId and '' != customerId">
			AND i.user_id =  #{customerId}
		</if>
		AND i.cfplanner =  #{userId}
		AND a. STATUS = 1
		<!-- <if test="null == customerId">
			AND DATE(a.end_time) BETWEEN #{start} AND #{end}
		</if> -->
		ORDER BY a.end_time
	</select>
	
	<select id="queryCustomerInvestTradeMsgCount" resultType="int">
		<![CDATA[ 
			SELECT
				count(*)
			FROM
				tcim_product_invest_record a
			LEFT JOIN tcim_fee b ON a.invest_id = b.bill_id
			AND b.fee_type = '1001'
			WHERE
				a.`status` = 1
			AND b.profit_cfplanner_id = #{userId} AND a.create_time > DATE_FORMAT(#{readTime},'%Y-%m-%d %H:%i:%s')
		]]> 
	</select>
	
	<select id="queryCustomerRepaymentTradeMsgCount" resultType="int">
		<![CDATA[ 
			SELECT
				count(*)
			FROM
				tcim_product_repayment_record a WHERE a.user_id IN (SELECT i.user_id from tcrm_investor i where i.cfplanner=#{userId}) AND a.repayment_time > DATE_FORMAT(#{readTime},'%Y-%m-%d %H:%i:%s')
		]]> 
	</select>
	
	
	<select id="queryCustomerInvestTradeMsg" resultType="com.linkwee.api.response.tc.CustomerTradeMsgResponse">
		SELECT
			u.user_id,
			u.mobile mobile,
			u.user_name NAME,
			p.product_name productName,
			p.is_flow isflow,
			p.flow_max_rate flowMaxRate,
			p.flow_min_rate flowMinRate,
			p.status productStatus,
			p.is_collect isCollect,
			f.fee_rate feeRate,
			f.fee_amount feeAmt,
			f.remark remark,
			a.create_time time,
			a.invest_amt amt,
			str_to_date('${readTime}','%Y-%m-%d %H:%i:%s') readTime,
			a.start_time startDate,
			a.end_time endDate,
			o.`name` platfrom,
			lf.leader_profit leaderProfit
		FROM
			tcim_product_invest_record a
			
		LEFT JOIN tcrm_investor iu  ON a.user_id = iu.user_id
		
		LEFT JOIN tcrm_user_info u ON a.user_id = u.user_id
		
		LEFT JOIN tcim_fee f ON iu.cfplanner =f.profit_cfplanner_id AND a.invest_id = f.bill_id
				
		AND f.fee_type = '1001'
		
		LEFT JOIN tcim_product p ON a.product_id = p.product_id 
		LEFT JOIN tcim_org_info o ON a.platfrom=o.org_number
		LEFT JOIN tcim_leader_fee lf ON a.invest_id = lf.invest_id and owner_id = #{userId}
		WHERE
			a.user_id IN (
				SELECT
					i.user_id
				FROM
					tcrm_investor i
				WHERE
				1=1
				<if test="null != customerId and '' != customerId">
					AND i.user_id=#{customerId}
				</if>
				AND i.cfplanner = #{userId}
			)
		AND a.`status` = 1 
		AND f.profit_cfplanner_id= #{userId}
		ORDER BY
			a.start_time DESC
	</select>
	
	
	
	
	<select id="queryCustomerRepaymentTradeMsg" resultType="com.linkwee.api.response.tc.CustomerTradeMsgResponse">
	
		SELECT
			b.user_id,
			b.mobile mobile,
			b.user_name NAME,
			str_to_date('${readTime}','%Y-%m-%d %H:%i:%s') readTime,
			a.repayment_time time,
			a.repayment_amt amt,
			a.profit profit,
			c.product_name productName,
			c.is_flow isflow,
			c.flow_max_rate flowMaxRate,
			c.flow_min_rate flowMinRate,
			f.fee_rate feeRate,
			f.fee_amount feeAmt,
			o.`name` platfrom,
			lf.leader_profit leaderProfit
		FROM
			tcim_product_repayment_record a
		LEFT JOIN tcrm_investor iu  ON a.user_id = iu.user_id
		LEFT JOIN tcrm_user_info b ON a.user_id = b.user_id
		LEFT JOIN tcim_product c ON a.product_id = c.product_id
		LEFT JOIN tcim_product_invest_record i ON a.invest_record_id = i.invest_record_no
		LEFT JOIN tcim_fee f ON iu.cfplanner =f.profit_cfplanner_id AND i.invest_id = f.bill_id
		LEFT JOIN tcim_org_info o ON i.platfrom=o.org_number
		LEFT JOIN tcim_leader_fee lf ON i.invest_id = lf.invest_id and owner_id = #{userId}
		<where>
			a.user_id IN 
			(
				SELECT
					user_id
				FROM
					tcrm_investor
					<where>
						1=1
						<if test="null != customerId and '' != customerId">
							AND user_id = #{customerId}
						</if>
						AND cfplanner =  #{userId}
					</where>
			) 
			AND f.profit_cfplanner_id=#{userId}
		</where>
		ORDER BY a.repayment_time DESC
	</select>
	
	
	
	<select id="queryCustomerTradeMsg" resultType="com.linkwee.api.response.tc.CustomerTradeMsgResponse">
		SELECT * FROM (SELECT
			p.product_name productName,
			p.is_flow isflow,
			p.flow_max_rate flowMaxRate,
			p.flow_min_rate flowMinRate,
			f.fee_rate feeRate,
			f.fee_amount feeAmt,
			a.create_time time,
			a.invest_amt amt,
			a.profit profit,
			a.start_time startDate,
			a.end_time endDate,
			1 type
		FROM
			tcim_product_invest_record a
		LEFT JOIN tcrm_investor iu  ON a.user_id = iu.user_id
		LEFT JOIN tcim_fee f ON 
		iu.cfplanner = f.profit_cfplanner_id AND
		a.invest_id = f.bill_id
		AND f.fee_type = '1001'
		
		LEFT JOIN tcim_product p ON a.product_id = p.product_id
		WHERE
			a.user_id = #{customerId}
		AND a.`status` = 1
		AND f.profit_cfplanner_id = #{userId}
		
		UNION ALL
		
			SELECT
				c.product_name productName,
				c.is_flow isflow,
				c.flow_max_rate flowMaxRate,
				c.flow_min_rate flowMinRate,
				f.fee_rate feeRate,
				f.fee_amount feeAmt,
				a.repayment_time time,
				a.repayment_amt amt,
				a.profit profit,
				b.start_time startDate,
				b.end_time endDate,
				2 type
			FROM
				tcim_product_repayment_record a
				
			LEFT JOIN tcrm_investor iu  ON a.user_id = iu.user_id
			
			LEFT JOIN tcim_product_invest_record b ON a.invest_record_id = b.invest_record_no
		
			LEFT JOIN tcim_fee f ON 
			
				iu.cfplanner = f.profit_cfplanner_id AND
				b.invest_id = f.bill_id
				AND f.fee_type = '1001'
				
			LEFT JOIN tcim_product c ON a.product_id = c.product_id
			WHERE
				a.user_id = #{customerId}
			AND f.profit_cfplanner_id = #{userId}) a ORDER BY a.time desc
		
	</select>
	
	<select id="queryCfpNewlyDynamic" resultType="com.linkwee.api.response.tc.TradeNewlyDynamicResponse">
	<![CDATA[ 
	SELECT 
	DATE_FORMAT(t.create_time,'%Y-%m-%d %H:%i') as time,
	t.remark as content,
	CASE t.fee_type
	WHEN '1001' THEN
	1
	WHEN '1002' THEN
	2
	END customertype,
 	CASE 
	WHEN t.fee_type = '1001' THEN 	t.investor_id
  	WHEN  t.fee_type = '1002'  and t.fee_rate = 25 then  t.origin_cfplanner_id
	WHEN  t.fee_type = '1002'  and t.fee_rate = 5 then  (select tcfp.parent_id from  tcrm_cfplanner tcfp where tcfp.user_id = t.origin_cfplanner_id) 
	END userId,
 	(case when t.create_time <= '${date}' then true else false end) readFlag
	FROM
	tcim_fee t
	WHERE
	(
	t.fee_type = '1001'
	OR t.fee_type = '1002'
	)
	AND t.profit_cfplanner_id = #{userId}
	ORDER BY t.create_time DESC
	 ]]>
	</select>
	
	<select id="queryCfpNewlyDynamicUnReadCount" resultType="int">
	<![CDATA[ 
	SELECT 
	count(t.id)
	FROM
	tcim_fee t
	WHERE
	(
	t.fee_type = '1001'
	OR t.fee_type = '1002'
	)
	AND t.profit_cfplanner_id =  #{userId}
    and  t.create_time >= '${date}'
	 ]]>
	</select>
	
	<!-- 根据产品编号查询在投投资记录 -->
	<select id="getInvestRecordByProductIds" resultMap="BaseResultMap">
		SELECT
			t.invest_id,
			t.invest_record_no,
			t.user_id,
			t.product_id,
			t.product_fee_rate,
			t.invest_amt,
			t.platfrom,
			t.start_time,
			t.is_first_invest,
			t.is_platfrom_first_invest
		FROM
			tcim_product_invest_record t
		WHERE
			t.product_id 
			<foreach collection="productIds" item="productId" open="IN (" separator="," close=")">
				#{productId}
			</foreach>
			AND t.status=1


	</select>
	<!-- 查询机构当月投资总额 -->
	<select id="queryMonthInvestAmount" resultType="java.math.BigDecimal">
		SELECT
		SUM(t.invest_amt)
		FROM
		tcim_product_invest_record t
		WHERE
		t.platfrom = #{orgNumber}
		AND DATE_FORMAT(t.start_time, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m')
	</select>
	
	<!-- 查询用户投资次数 -->
	<select id="queryUserInvestCount" resultType="int">
		SELECT
			count(*)
		FROM
			(
				SELECT
					invest_id
				FROM
					tcim_product_invest_record
				WHERE
					user_id = #{userId}
				UNION
					SELECT
						invest_id
					FROM
						tcim_product_unrecord_invest
					WHERE
						user_id = #{userId}
			) a
	<!-- SELECT COUNT(invest_id) FROM tcim_product_invest_record  WHERE user_id=#{userId} -->
	</select>
	
	<!-- 查询用户平台投资次数 -->
	<select id="queryUserPlatfromInvestCount" resultType="int">
		SELECT COUNT(invest_id) FROM tcim_product_invest_record WHERE platfrom=#{platfromId} AND user_id=#{userId}
	</select>
	
	<select id="queryPlatfromInvestCount" resultType="string">
		SELECT 
			platfrom
		FROM tcim_product_invest_record WHERE  
			user_id=#{userId} 
			AND platfrom IN
			<foreach collection="platfromIds" item="platfrom" open="(" separator="," close=")">
				#{platfrom}
			</foreach>
			AND is_platfrom_first_invest=1
	</select>
	
	
	<select id="getInvestRecordCounts" resultType="map">
		SELECT
			IFNULL(
				count(
					CASE
					WHEN i.`status` = 1 THEN
						1
					ELSE
						NULL
					END
				),
				0
			) tzz,
			IFNULL(
				count(
					CASE
					WHEN i.`status` = 2 THEN
						1
					ELSE
						NULL
					END
				),
				0
			) hkz,
			IFNULL(
				count(
					CASE
					WHEN i.`status` = 3 THEN
						1
					ELSE
						NULL
					END
				),
				0
			) hkwc,
			(
				SELECT
					IFNULL(
						count(
							CASE
							WHEN u.`status` = 1 THEN
								1
							ELSE
								NULL
							END
						),
						0
					)
				FROM
					tcim_product_unrecord_invest u
				WHERE
					u.user_mobile = (
						SELECT
							mobile
						FROM
							tcrm_investor i
						WHERE
							i.user_id = #{userId}
					)
			) qt
		FROM
			tcim_product_invest_record i
		WHERE
			i.user_id = #{userId}
	</select>
	
	<select id="getInvestProfit" resultType="com.linkwee.api.response.tc.CustomerInvestProfitResponse">
		SELECT 
			IFNULL(SUM(CASE WHEN i.`status`=1 THEN i.profit ELSE 0 END),0) investAmt,
			IFNULL(SUM(CASE WHEN i.`status`=2 THEN i.profit ELSE 0 END),0) paymentAmt,
			IFNULL(SUM(CASE WHEN i.`status`=3 THEN i.profit ELSE 0 END),0) paymentDoneAmt
		FROM tcim_product_invest_record  i where i.user_id = #{userId}
	</select>
	
	<select id="selectNewestTop200" resultType="com.linkwee.api.response.tc.CfpOrderResponse">
		SELECT
			FORMAT(tpir.invest_amt, 2) orderMoney,
			tc.mobile mobile
		FROM
			tcim_product_invest_record tpir,
			tcrm_investor ti,
			tcrm_cfplanner tc
		WHERE
			tpir.user_id = ti.user_id
		AND ti.cfplanner = tc.user_id
		AND tpir.start_time BETWEEN date_sub(now(), INTERVAL 2 MONTH)
		AND NOW()
		ORDER BY
			tpir.id DESC
		LIMIT 200
	</select>
	
	<!-- 我的投资记录 v4.0 -->
	<select id="myInvestrecord" parameterType="com.linkwee.api.request.cim.MyInvestrecordRequest" resultType="com.linkwee.api.response.cim.MyInvestrecordResponse">
		SELECT
			toi.platformlist_ico AS platformlistIco,
			tp.product_name AS productName,
			DATE_FORMAT(tpir.start_time, '%Y-%m-%d') AS startTime,
		 	tpir.invest_amt AS investAmt,
		 	tpir.profit AS profit,
			<if test="investType == 0 ">
				tpir.biz_time AS bizTime,
				IF(tpir.end_time <![CDATA[ > ]]> NOW(), 0, 1) AS canRedemption,
			</if>
			<if test="investType == 1 ">
				tpir.update_time AS bizTime,
				0 AS canRedemption,
			</if>
		 	tpir.invest_id AS investId,
			str_to_date('${lastReaddate}','%Y-%m-%d %H:%i:%s') AS lastReaddate,	 	
		 	DATE_FORMAT(tpir.end_time, '%Y-%m-%d') AS endTime
		FROM
			tcim_product_invest_record tpir,
			tcim_product tp,
			tcim_org_info toi
		WHERE
			tpir.user_id = #{userId,jdbcType=VARCHAR}
		<if test="investType == 0 ">
			AND tpir.`status` <![CDATA[ <> ]]> 3
		</if>
		<if test="investType == 1 ">
			AND tpir.`status` = 3
		</if>
		AND tpir.product_id = tp.product_id
		AND tpir.platfrom = toi.org_number
		ORDER BY
			tpir.biz_time DESC	
	</select>
	
	<!-- 查询客户未读的投资记录条数 -->
	<select id="queryNotReadRecord" resultType="java.lang.Integer">
		SELECT
			COUNT(tpir.invest_id)
		FROM
			tcim_product_invest_record tpir,
			tcim_product tp,
			tcim_org_info toi
		WHERE
			tpir.user_id = #{userId,jdbcType=VARCHAR}
		<if test="investType == 0 ">
			AND tpir.`status` <![CDATA[ <> ]]> 3
		</if>
		<if test="investType == 1 ">
			AND tpir.`status` = 3
		</if>
		AND tpir.product_id = tp.product_id
		AND tpir.platfrom = toi.org_number
		<if test="investType == 0 ">
			AND tpir.biz_time <![CDATA[ > ]]> str_to_date('${lastReaddate}','%Y-%m-%d %H:%i:%s')
		</if>
		<if test="investType == 1 ">
			AND tpir.update_time <![CDATA[ > ]]> str_to_date('${lastReaddate}','%Y-%m-%d %H:%i:%s')
		</if>
	</select>		
	
	<select id="getGoodTransByInvestId" resultType="com.linkwee.web.model.crm.GoodTransResp">
	      select reco.invest_id billId,CAST(reco.invest_amt as decimal) amount,reco.create_time investTime,(select user_name from tcrm_user_info tci where tci.user_id =(select intor.cfplanner from tcrm_investor intor where intor.mobile=us.mobile)) userName,us.mobile from tcim_product_invest_record 
	       reco LEFT JOIN tcrm_user_info us on reco.user_id = us.user_id where reco.invest_id = #{billId}
	</select>
	
	<select id="getGoodTrans" resultType="com.linkwee.web.model.crm.GoodTransResp">
		(select reco.invest_id billId,CAST(reco.invest_amt as decimal) amount,reco.create_time investTime,(select user_name from tcrm_user_info tci where tci.user_id =(select intor.cfplanner from tcrm_investor intor where intor.mobile=us.mobile)) userName,us.mobile from tcim_product_invest_record reco LEFT JOIN tcrm_user_info us on reco.user_id = us.user_id where 
		reco.user_id in (select inv1.user_id  from tcrm_investor inv1 where inv1.cfplanner=#{userId}) and reco.invest_amt<![CDATA[ >= ]]>5000)
		
		union ALL
		
		
		(select reco.invest_id billId,CAST(reco.invest_amt as decimal) amount,reco.create_time investTime,us.user_name userName,us.mobile  from tcim_product_invest_record reco LEFT JOIN tcrm_user_info us on reco.user_id = us.user_id where 
		reco.user_id in (select inv2.user_id  from tcrm_investor inv2 where inv2.user_id =#{userId}) and reco.invest_amt<![CDATA[ >= ]]>5000)
		
		union ALL
		
		(select reco.invest_id billId,CAST(reco.invest_amt as decimal) amount,reco.create_time investTime,us.user_name userName,us.mobile  from tcim_product_invest_record reco LEFT JOIN tcrm_user_info us on reco.user_id = us.user_id where 
		reco.user_id in (select cfp1.user_id from tcrm_cfplanner cfp1 where cfp1.parent_id=#{userId}) and reco.invest_amt<![CDATA[ >= ]]>5000)
		
		union ALL
		
		(select reco.invest_id billId,CAST(reco.invest_amt as decimal) amount,reco.create_time investTime,(select user_name from tcrm_user_info tci where tci.user_id =(select intor.cfplanner from tcrm_investor intor where intor.mobile=us.mobile)) as user_name,us.mobile  from tcim_product_invest_record reco LEFT JOIN tcrm_user_info us on reco.user_id = us.user_id where 
		reco.user_id in (select inv3.user_id  from tcrm_investor inv3 where cfplanner in (select cfp2.user_id from tcrm_cfplanner cfp2 where cfp2.parent_id=#{userId})) 
		and reco.invest_amt<![CDATA[ >= ]]>5000)
		
		
		ORDER BY investTime desc  limit 1
	
	</select>	
	
	
	 <select id="queryOldGoodTransList" resultMap="GoodTransResultMap" >
	 select DISTINCT invest_id,CAST(invest_amt as decimal) invest_amt,create_time,user_name,mobile from (
	     (select reco.invest_id,reco.invest_amt,reco.create_time,(select user_name from tcrm_user_info tci where tci.user_id =(select intor.cfplanner from tcrm_investor intor where intor.mobile=us.mobile)) as user_name,us.mobile from tcim_product_invest_record reco LEFT JOIN tcrm_user_info us on reco.user_id = us.user_id where 
		reco.user_id in (select inv1.user_id  from tcrm_investor inv1 where inv1.cfplanner=#{userId}) and reco.invest_amt<![CDATA[ >= ]]>5000)
		
		union ALL
		
		(select reco.invest_id,reco.invest_amt,reco.create_time,us.user_name,us.mobile  from tcim_product_invest_record reco LEFT JOIN tcrm_user_info us on reco.user_id = us.user_id where 
		reco.user_id in (select inv2.user_id  from tcrm_investor inv2 where inv2.user_id =#{userId}) and reco.invest_amt<![CDATA[ >= ]]>5000)
		
		union ALL
		
		(select reco.invest_id,reco.invest_amt,reco.create_time,us.user_name,us.mobile from tcim_product_invest_record reco LEFT JOIN tcrm_user_info us on reco.user_id = us.user_id where 
		reco.user_id in (select cfp1.user_id from tcrm_cfplanner cfp1 where cfp1.parent_id=#{userId}) and reco.invest_amt<![CDATA[ >= ]]>5000)
		
		union ALL
		
		(select reco.invest_id,reco.invest_amt,reco.create_time,
		(select user_name from tcrm_user_info tci where tci.user_id =(select intor.cfplanner from tcrm_investor intor where intor.mobile=us.mobile)) as user_name,
		us.mobile  from tcim_product_invest_record reco LEFT JOIN tcrm_user_info us on reco.user_id = us.user_id where 
		reco.user_id in (select inv3.user_id  from tcrm_investor inv3 where cfplanner in (select cfp2.user_id from tcrm_cfplanner cfp2 where cfp2.parent_id=#{userId})) 
		and reco.invest_amt<![CDATA[ >= ]]>5000)
		
		) investrecord where date_format(create_time, '%Y-%m')<![CDATA[ >= ]]>#{month}
		
		<if test=" sort == 1">
	 		 ORDER BY invest_amt desc
 		</if>
 		
 		<if test=" sort == 2">
	 		 ORDER BY create_time desc
 		</if>
		
	 </select>
	 
	 
	<!-- 查询 回款日历 -->
	<select id="queryRepamentCalendarPageList" parameterType="com.linkwee.api.request.crm.RepamentCalendarRequest" resultType="com.linkwee.api.response.crm.RepamentCalendarResponse">
	   SELECT
			temp.investId,
			temp.headImage,
			temp.userName,
			temp.platformName,
			temp.investAmt,
			temp.profit,
			temp.endTime,
			temp.endTimeStr,
			temp.orderType,
			temp.repaymentUserType
		FROM
			(
				SELECT
				    tpir.invest_id AS investId,
					ti.head_image AS headImage,
					tab.user_name AS userName,
					toi.`name` AS platformName,
					tpir.invest_amt AS investAmt,
					tpir.profit,
					tpir.end_time AS endTime,
				  	DATE_FORMAT(tpir.end_time,'%Y年%m月%d日') AS endTimeStr,
					IF (
						ti.user_id = ti.cfplanner,
						1,
						2
					) AS orderType,
					 0 AS repaymentUserType
					FROM
						tcim_product_invest_record tpir,
						tcrm_investor ti,
						tac_account_bind tab,
						tcim_org_info toi
					WHERE
						ti.cfplanner = #{userId,jdbcType=VARCHAR}
			 		<if test=" queryType == 1 ">
				 		 AND ti.user_id  = #{userId,jdbcType=VARCHAR}
			 		</if>
			 		<if test=" queryType == 2 ">
				 		 AND ti.user_id  <![CDATA[ <> ]]> #{userId,jdbcType=VARCHAR}
			 		</if>						
					AND ti.user_id = tpir.user_id
					AND ti.user_id = tab.user_id
					AND tpir.platfrom = toi.org_number
					<if test=" repamentType == 0">
				 		 AND tpir.`status` <![CDATA[ <> ]]> 3
			 		</if>
			 		<if test=" repamentType == 1">
				 		 AND tpir.`status` = 3
			 		</if>
			 		<if test=" repamentTime != null and repamentTime != '' ">
				 		 AND tpir.end_time LIKE CONCAT('%','${repamentTime}','%' )  
			 		</if>
				UNION
					SELECT
				        tpir.invest_id AS investId,
						tc.head_image AS headImage,
						tab.user_name AS userName,
						toi.`name` AS platformName,
						tpir.invest_amt AS investAmt,
						tpir.profit,
						tpir.end_time AS endTime,
				   		DATE_FORMAT(tpir.end_time,'%Y年%m月%d日') AS endTimeStr,
						2 AS orderType,
						1 AS repaymentUserType
					FROM
						tcim_product_invest_record tpir,
						tcrm_cfplanner tc,
						tac_account_bind tab,
						tcim_org_info toi
					WHERE
						tc.parent_id = #{userId,jdbcType=VARCHAR}
			 		<if test=" queryType == 1 ">
				 		 AND tc.user_id  = #{userId,jdbcType=VARCHAR}
			 		</if>
			 		<if test=" queryType == 2 ">
				 		 AND tc.user_id  <![CDATA[ <> ]]> #{userId,jdbcType=VARCHAR}
			 		</if>						
					AND tc.user_id = tpir.user_id
					AND tc.user_id = tab.user_id
					AND tpir.platfrom = toi.org_number
					<if test=" repamentType == 0">
				 		 AND tpir.`status` <![CDATA[ <> ]]> 3
			 		</if>
			 		<if test=" repamentType == 1">
				 		 AND tpir.`status` = 3
			 		</if>
			 		<if test=" repamentTime != null and repamentTime != '' ">
				 		 AND tpir.end_time LIKE CONCAT('%','${repamentTime}','%' )  
			 		</if>			
			) temp 		
			ORDER BY
				<if test=" repamentType == 0">
			 		 DATE_FORMAT(endTime,'%Y-%m-%d') ASC,
		 		</if>
		 		<if test=" repamentType == 1">
			 		 DATE_FORMAT(endTime,'%Y-%m-%d') DESC,
		 		</if>
				repaymentUserType ASC,
				orderType ASC,
				investAmt DESC
	</select>
	
	<!-- 查询 交易日历 -->
	<select id="queryInvestCalendarPageList" parameterType="com.linkwee.api.request.crm.InvestCalendarRequest" resultType="com.linkwee.api.response.crm.InvestCalendarResponse">
			SELECT
				tpir.invest_id AS investId,
				tpir.invest_amt AS investAmt,
				tpir.start_time AS startTime,
				DATE_FORMAT(
					tpir.start_time,
					'%Y年%m月%d日'
				) AS startTimeStr,
				temp.feeAmountSum,
				toi.`name` AS platformName,
			  <!-- 查询用户类型级别 -->
			  CASE temp.minFeeType 
			       WHEN '1001' THEN 0
						 WHEN '1002' THEN  (CASE TEMP.feeRate WHEN 5 THEN 2  ELSE 1 END)  <!-- 兼容之前老版本基本法-->
						 WHEN '1005' THEN  2
						 WHEN '1006' THEN (CASE TEMP.lowType WHEN 0 THEN 1  WHEN 1 THEN 2 WHEN 2 THEN 3 END)
						 END AS userType,
			  <!-- 查询客户姓名和直接理财师姓名 -->
			  CASE temp.minFeeType 
			       WHEN
								'1001' 
						 THEN 
								(SELECT
										IFNULL(tui.user_name, tui.mobile)
									FROM
										tcrm_user_info tui
									WHERE
										tui.user_id = tpir.user_id)
						 WHEN 
								'1002'				
						 THEN  (CASE TEMP.feeRate 
						 			WHEN 5 THEN
										(SELECT
												IFNULL(tui.user_name, tui.mobile)
											FROM
												tcrm_user_info tui,
												tcrm_cfplanner tc,
												tcim_fee tf
											WHERE
													tf.bill_id = temp.billId
											AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
											AND tf.fee_type = '1002'
											AND tc.user_id = tf.origin_cfplanner_id
											AND tui.user_id = tc.parent_id)			<!-- 兼容之前老版本基本法  老基本法对应的是上上级  feeRate=5 -->			 
										 ELSE 
										    (SELECT
												IFNULL(tui.user_name, tui.mobile)
											FROM
												tcrm_user_info tui,
												tcim_fee tf
											WHERE
													tf.bill_id = temp.billId
											AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
											AND tf.fee_type = '1002'
											AND tui.user_id = tf.origin_cfplanner_id)
										END)
																	
						 WHEN 
								'1005'
						 THEN 
								(SELECT
										IFNULL(tui.user_name, tui.mobile)
									FROM
										tcrm_user_info tui,
										tcim_fee tf
									WHERE
											tf.bill_id = temp.billId
									AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
									AND tf.fee_type = '1005'
									AND tui.user_id = tf.origin_cfplanner_id)
						 WHEN 
								'1006' 
						 THEN 
								(SELECT
										IFNULL(tui.user_name, tui.mobile)
									FROM
										tcrm_user_info tui,
										tcim_fee tf
									WHERE
											tf.bill_id = temp.billId
									AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
									AND tf.fee_type = '1006'
									AND tui.user_id = tf.low_user_id)
						 END AS userName,
				<!-- 查询客户头像和理财师头像 -->
				 CASE temp.minFeeType 
							 WHEN
									'1001' 
							 THEN 
									(SELECT
											ti.head_image
										FROM
											tcrm_investor ti
										WHERE
											ti.user_id = tpir.user_id)
							 WHEN 
									'1002' 
							 THEN  (CASE TEMP.feeRate 
							 		WHEN 5 THEN
										(SELECT
												ti.head_image
											FROM
												tcrm_investor ti,
												tcrm_cfplanner tc,
												tcim_fee tf
											WHERE
													tf.bill_id = temp.billId
											AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
											AND tf.fee_type = '1002'
											AND tc.user_id = tf.origin_cfplanner_id
											AND ti.user_id = tc.parent_id)<!-- 兼容之前老版本基本法  老基本法对应的是上上级  feeRate=5 -->	 
									 ELSE 
										(SELECT
												ti.head_image
											FROM
												tcrm_investor ti,
												tcim_fee tf
											WHERE
													tf.bill_id = temp.billId
											AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
											AND tf.fee_type = '1002'
											AND ti.user_id = tf.origin_cfplanner_id)
									END)
							 WHEN 
									'1005' 
							 THEN 
									(SELECT
											ti.head_image
										FROM
											tcrm_investor ti,
											tcim_fee tf
										WHERE
												tf.bill_id = temp.billId
										AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
										AND tf.fee_type = '1005'
										AND ti.user_id = tf.origin_cfplanner_id)
							 WHEN 
									'1006' 
							 THEN 
									(SELECT
											ti.head_image
										FROM
											tcrm_investor ti,
											tcim_fee tf
										WHERE
												tf.bill_id = temp.billId
										AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
										AND tf.fee_type = '1006'
										AND ti.user_id = tf.low_user_id)
							 END AS headImage
			FROM
				(
					SELECT
						tf.bill_id AS billId,
						tf.profit_cfplanner_id,
						tf.low_type AS lowType,
						tf.fee_rate AS feeRate,
						MIN(tf.fee_type) AS minFeeType,
						SUM(tf.fee_amount) AS feeAmountSum
					FROM
						tcim_fee tf
					WHERE
						tf.profit_cfplanner_id = #{userId,jdbcType=VARCHAR}
				 		<if test=" queryType == 1 ">
					 		 AND tf.investor_id  = #{userId,jdbcType=VARCHAR}
				 		</if>
				 		<if test=" queryType == 2 ">
					 		 AND tf.investor_id  <![CDATA[ <> ]]> #{userId,jdbcType=VARCHAR}
				 		</if>				 							
					GROUP BY
						tf.bill_id
					HAVING feeAmountSum > 0
				) temp,
				tcim_product_invest_record tpir,
				tcim_org_info toi
			WHERE
				  temp.billId = tpir.invest_id
			AND toi.org_number = tpir.platfrom
	 		<if test=" investTime != null and investTime != '' ">
		 		 AND tpir.start_time LIKE CONCAT('%','${investTime}','%' )  
	 		</if>			
			ORDER BY
				tpir.start_time DESC,
				tpir.invest_amt DESC
				
				
				
				<!-- 写法二 -->
				<!-- SELECT 
							tempLast.*,
							ti.head_image AS headImage,
							tui.user_name AS userName
					FROM	
							(SELECT
											tpir.invest_id AS investId,
											tpir.invest_amt AS investAmt,
											tpir.start_time AS startTime,
											DATE_FORMAT(
												tpir.start_time,
												'%Y年%m月%d日'
											) AS startTimeStr,
											temp.feeAmountSum,
											toi.`name` AS platformName,
										  查询用户类型级别
											CASE temp.minFeeType 
													 WHEN '1001' THEN 0
													 WHEN '1002' THEN  (CASE TEMP.feeRate WHEN 5 THEN 2  ELSE 1 END)  兼容之前老版本基本法
													 WHEN '1005' THEN  2
													 WHEN '1006' THEN (CASE TEMP.lowType WHEN 0 THEN 1  WHEN 1 THEN 2 WHEN 2 THEN 3 END)
													 END AS userType,
										 	查询客户userId
											 CASE temp.minFeeType 
														 WHEN
																'1001' 
														 THEN 
																(SELECT
																		ti.user_id
																	FROM
																		tcrm_investor ti
																	WHERE
																		ti.user_id = tpir.user_id)
														 WHEN 
																'1002' 
														 THEN  (CASE TEMP.feeRate 
																WHEN 5 THEN
																	(SELECT
																			tc.parent_id
																		FROM
																			tcrm_cfplanner tc,
																			tcim_fee tf
																		WHERE
																				tf.bill_id = temp.billId
																		AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
																		AND tf.fee_type = '1002'
																		AND tc.user_id = tf.origin_cfplanner_id) 兼容之前老版本基本法  老基本法对应的是上上级  feeRate=5	 
																 ELSE 
																	(SELECT
																			tf.origin_cfplanner_id
																		FROM
																			tcim_fee tf
																		WHERE
																				tf.bill_id = temp.billId
																		AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
																		AND tf.fee_type = '1002')
																END)
														 WHEN 
																'1005' 
														 THEN 
																(SELECT
																		tf.origin_cfplanner_id
																	FROM
																		tcim_fee tf
																	WHERE
																			tf.bill_id = temp.billId
																	AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
																	AND tf.fee_type = '1005')
														 WHEN 
																'1006' 
														 THEN 
																(SELECT
																		tf.low_user_id
																	FROM
																		tcim_fee tf
																	WHERE
																			tf.bill_id = temp.billId
																	AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
																	AND tf.fee_type = '1006')
														 END AS userId
										FROM
											(
												SELECT
													tf.bill_id AS billId,
													tf.profit_cfplanner_id,
													tf.low_type AS lowType,
													tf.fee_rate AS feeRate,
													MIN(tf.fee_type) AS minFeeType,
													SUM(tf.fee_amount) AS feeAmountSum
												FROM
													tcim_fee tf
												WHERE
													tf.profit_cfplanner_id = #{userId,jdbcType=VARCHAR}
												GROUP BY
													tf.bill_id
												HAVING feeAmountSum > 0
											) temp,
											tcim_product_invest_record tpir,
											tcim_org_info toi
										WHERE
												temp.billId = tpir.invest_id
										AND toi.org_number = tpir.platfrom
							) tempLast,
				      tcrm_investor ti,
					  tcrm_user_info tui
				WHERE ti.user_id = tempLast.userId
				  AND ti.user_id = tui.user_id
		 		<if test=" investTime != null and investTime != '' ">
			 	  AND tempLast.startTime LIKE CONCAT('%','${investTime}','%' )  
		 		</if>						
				ORDER BY
					tempLast.startTime DESC,
					tempLast.investAmt DESC -->
					
	</select>
	
	<!-- 交易日历统计数量-网贷-->
	<select id="investCalendarStatisticsNumber" parameterType="com.linkwee.api.request.crm.InvestCalendarStatisticsRequest" resultType="com.linkwee.api.response.crm.CalendarStatisticsResponse">
			SELECT
				DATE_FORMAT(tpir.start_time, '%Y-%m-%d') AS calendarTime,
				COUNT(tpir.invest_id) AS calendarNumber
			FROM
				(
					SELECT
						tf.bill_id AS billId,
						tf.profit_cfplanner_id,
						tf.low_type AS lowType,
						tf.fee_rate AS feeRate,
						MIN(tf.fee_type) AS minFeeType,
						SUM(tf.fee_amount) AS feeAmountSum
					FROM
						tcim_fee tf
					WHERE
						tf.profit_cfplanner_id = #{userId,jdbcType=VARCHAR}
				 		<if test=" queryType == 1 ">
					 		 AND tf.investor_id  = #{userId,jdbcType=VARCHAR}
				 		</if>
				 		<if test=" queryType == 2 ">
					 		 AND tf.investor_id  <![CDATA[ <> ]]> #{userId,jdbcType=VARCHAR}
				 		</if>						
					GROUP BY
						tf.bill_id
					HAVING
						feeAmountSum <![CDATA[ > ]]> 0
				) temp,
				tcim_product_invest_record tpir
			WHERE
				temp.billId = tpir.invest_id
			AND DATE_FORMAT(tpir.start_time, '%Y-%m') = #{investMonth,jdbcType=VARCHAR}
			GROUP BY
				DATE_FORMAT(tpir.start_time, '%Y-%m-%d')
			ORDER BY tpir.start_time  ASC	
	</select>
	
	<!-- 交易日历统计金额-网贷-->
	<select id="investCalendarStatisticsTotal" parameterType="com.linkwee.api.request.crm.InvestCalendarStatisticsRequest" resultType="com.linkwee.api.response.crm.P2pInvestCalendarStatisticsResponse">
			SELECT
				IFNULL(SUM(tpir.invest_amt),0) AS p2pInvestAmtTotal,
				IFNULL(SUM(temp.feeAmountSum),0) AS p2pFeeAmountSumTotal
			FROM
				(
					SELECT
						tf.bill_id AS billId,
						tf.profit_cfplanner_id,
						tf.low_type AS lowType,
						tf.fee_rate AS feeRate,
						MIN(tf.fee_type) AS minFeeType,
						SUM(tf.fee_amount) AS feeAmountSum
					FROM
						tcim_fee tf
					WHERE
						tf.profit_cfplanner_id = #{userId,jdbcType=VARCHAR}
				 		<if test=" queryType == 1 ">
					 		 AND tf.investor_id  = #{userId,jdbcType=VARCHAR}
				 		</if>
				 		<if test=" queryType == 2 ">
					 		 AND tf.investor_id  <![CDATA[ <> ]]> #{userId,jdbcType=VARCHAR}
				 		</if>						
					GROUP BY
						tf.bill_id
					HAVING
						feeAmountSum <![CDATA[ > ]]>  0
				) temp,
				tcim_product_invest_record tpir
			WHERE
				temp.billId = tpir.invest_id
			AND DATE_FORMAT(tpir.start_time, '%Y-%m') = #{investMonth,jdbcType=VARCHAR}	
	</select>
	
		<!-- 回款日历统计数量-网贷-->
	<select id="repamentCalendarStatisticsNumber" parameterType="com.linkwee.api.request.crm.RePaymentCalendarStatisticsRequest" resultType="com.linkwee.api.response.crm.CalendarStatisticsResponse">
	   		SELECT
					DATE_FORMAT(temp.endTime, '%Y-%m-%d') AS calendarTime,
					COUNT(temp.investId) AS calendarNumber
			FROM
				(
					SELECT
							tpir.invest_id AS investId,
							tpir.end_time AS endTime
						FROM
							tcim_product_invest_record tpir,
							tcrm_investor ti
						WHERE
							ti.cfplanner = #{userId,jdbcType=VARCHAR}
				 		<if test=" queryType == 1 ">
					 		 AND ti.user_id  = #{userId,jdbcType=VARCHAR}
				 		</if>
				 		<if test=" queryType == 2 ">
					 		 AND ti.user_id  <![CDATA[ <> ]]> #{userId,jdbcType=VARCHAR}
				 		</if>							
						AND ti.user_id = tpir.user_id
					UNION
						SELECT
					        tpir.invest_id AS investId,
							tpir.end_time AS endTime
						FROM
							tcim_product_invest_record tpir,
							tcrm_cfplanner tc
						WHERE
							tc.parent_id = #{userId,jdbcType=VARCHAR}
				 		<if test=" queryType == 1 ">
					 		 AND tc.user_id  = #{userId,jdbcType=VARCHAR}
				 		</if>
				 		<if test=" queryType == 2 ">
					 		 AND tc.user_id  <![CDATA[ <> ]]> #{userId,jdbcType=VARCHAR}
				 		</if>							
						AND tc.user_id = tpir.user_id
				) temp
				WHERE
				  DATE_FORMAT(temp.endTime, '%Y-%m') = #{rePaymentMonth,jdbcType=VARCHAR}
				GROUP BY
					DATE_FORMAT(temp.endTime, '%Y-%m-%d')
				ORDER BY temp.endTime  ASC		
	</select>
	
	<!-- 回款日历统计金额-网贷-->
	<select id="repamentCalendarStatisticsTotal" parameterType="com.linkwee.api.request.crm.RePaymentCalendarStatisticsRequest" resultType="java.math.BigDecimal">
	   		SELECT
				IFNULL(SUM(temp.investAmt),0) AS investAmtTotal
			FROM
				(
					SELECT
							tpir.end_time AS endTime,
							tpir.invest_amt AS investAmt
						FROM
							tcim_product_invest_record tpir,
							tcrm_investor ti
						WHERE
							ti.cfplanner = #{userId,jdbcType=VARCHAR}
				 		<if test=" queryType == 1 ">
					 		 AND ti.user_id  = #{userId,jdbcType=VARCHAR}
				 		</if>
				 		<if test=" queryType == 2 ">
					 		 AND ti.user_id  <![CDATA[ <> ]]> #{userId,jdbcType=VARCHAR}
				 		</if>							
						AND ti.user_id = tpir.user_id
					<if test=" repamentType == 0">
				 		 AND tpir.`status` <![CDATA[ <> ]]> 3
			 		</if>
			 		<if test=" repamentType == 1">
				 		 AND tpir.`status` = 3
			 		</if>						
					UNION
						SELECT
							tpir.end_time AS endTime,
							tpir.invest_amt AS investAmt
						FROM
							tcim_product_invest_record tpir,
							tcrm_cfplanner tc
						WHERE
							tc.parent_id = #{userId,jdbcType=VARCHAR}
				 		<if test=" queryType == 1 ">
					 		 AND tc.user_id  = #{userId,jdbcType=VARCHAR}
				 		</if>
				 		<if test=" queryType == 2 ">
					 		 AND tc.user_id  <![CDATA[ <> ]]> #{userId,jdbcType=VARCHAR}
				 		</if>								
						AND tc.user_id = tpir.user_id
					<if test=" repamentType == 0">
				 		 AND tpir.`status` <![CDATA[ <> ]]> 3
			 		</if>
			 		<if test=" repamentType == 1">
				 		 AND tpir.`status` = 3
			 		</if>						
				) temp
				WHERE
				  DATE_FORMAT(temp.endTime, '%Y-%m') = #{rePaymentMonth,jdbcType=VARCHAR}	
	</select>
	
	<!-- 查询交易详情 -->
	<select id="queryInvestCalendarDetail" parameterType="com.linkwee.api.request.crm.InvestCalendarDetailRequest" resultType="com.linkwee.api.response.crm.InvestCalendarDetailResponse">
			SELECT
				tpir.invest_id AS investId,
				tpir.invest_amt AS investAmt,
				tpir.start_time AS startTime,
				tpir.end_time AS endTime,
				tpir.profit,
				tpir.product_fee_rate AS productFeeRate,
				temp.feeAmountSum,
				toi.`name` AS platformName,
				tp.product_name AS productName,
				tp.is_fixed_deadline AS isFixedDeadline,
				tp.dead_line_min_value AS deadLineMinValue,
				tp.dead_line_max_value AS deadLineMaxValue,
				tp.dead_line_min_self_defined AS deadLineMinSelfDefined,
				tp.dead_line_max_self_defined AS deadLineMaxSelfDefined,
				tp.sale_end_time AS saleEndTime,
				tp.is_flow AS isFlow,
				tp.flow_min_rate AS flowMinRate,
				tp.flow_max_rate AS flowMaxRate,
				(SELECT IFNULL(trur.money,0.00) FROM tact_redpacket_use_record trur WHERE trur.invest_id = tpir.invest_record_no ) AS redpacketProfit,
				(SELECT IFNULL(tpatsd.fee_amount, 0.00) FROM tact_person_addfee_ticket_senduse_detail tpatsd WHERE tpatsd.invest_id = tpir.invest_id) AS personAddfeeAmount,
				tpir.virtual_paltform_bouns AS virtualPlatformBouns,
				CASE WHEN temp.profit_cfplanner_id = tpir.user_id THEN 1 ELSE 0 END AS isSelf,
			  <!-- 查询用户类型级别 -->
			  CASE temp.minFeeType 
			       WHEN '1001' THEN 0
						 WHEN '1002' THEN (CASE TEMP.feeRate WHEN 5 THEN 2  ELSE 1 END) <!-- 兼容之前老版本基本法-->
						 WHEN '1005' THEN 2
						 WHEN '1006' THEN (CASE TEMP.lowType WHEN 0 THEN 1  WHEN 1 THEN 2 WHEN 2 THEN 3 END)
						 END AS userType,
			  <!-- 查询客户姓名和直接理财师姓名 -->
			  CASE temp.minFeeType 
			       WHEN
								'1001' 
						 THEN 
								(SELECT
										IFNULL(tui.user_name, tui.mobile)
									FROM
										tcrm_user_info tui
									WHERE
										tui.user_id = tpir.user_id)
						 WHEN 
								'1002' 
						 THEN  (CASE TEMP.feeRate WHEN 5 THEN
								(SELECT
										IFNULL(tui.user_name, tui.mobile)
									FROM
										tcrm_user_info tui,
										tcrm_cfplanner tc,
										tcim_fee tf
									WHERE
											tf.bill_id = temp.billId
									AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
									AND tf.fee_type = '1002'
									AND tc.user_id = tf.origin_cfplanner_id
									AND tui.user_id = tc.parent_id)	<!-- 兼容之前老版本基本法  老基本法对应的是上上级  feeRate=5 -->	 
								 ELSE 
								(SELECT
										IFNULL(tui.user_name, tui.mobile)
									FROM
										tcrm_user_info tui,
										tcim_fee tf
									WHERE
											tf.bill_id = temp.billId
									AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
									AND tf.fee_type = '1002'
									AND tui.user_id = tf.origin_cfplanner_id)
								END)
						 WHEN 
								'1005'
						 THEN 
								(SELECT
										IFNULL(tui.user_name, tui.mobile)
									FROM
										tcrm_user_info tui,
										tcim_fee tf
									WHERE
											tf.bill_id = temp.billId
									AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
									AND tf.fee_type = '1005'
									AND tui.user_id = tf.origin_cfplanner_id)
						 WHEN 
								'1006' 
						 THEN 
								(SELECT
										IFNULL(tui.user_name, tui.mobile)
									FROM
										tcrm_user_info tui,
										tcim_fee tf
									WHERE
											tf.bill_id = temp.billId
									AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
									AND tf.fee_type = '1006'
									AND tui.user_id = tf.low_user_id)
						 END AS userName,
			  <!-- 查询客户user_id和直接理财师user_id -->
			  CASE temp.minFeeType 
			       WHEN
								'1001' 
						 THEN 
								(SELECT
										tui.user_id
									FROM
										tcrm_user_info tui
									WHERE
										tui.user_id = tpir.user_id)
						 WHEN 
								'1002' 
							 THEN  (CASE TEMP.feeRate 
							 		WHEN 5 THEN
										(SELECT
												tui.user_id
											FROM
												tcrm_user_info tui,
												tcrm_cfplanner tc,
												tcim_fee tf
											WHERE
													tf.bill_id = temp.billId
											AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
											AND tf.fee_type = '1002'
											AND tc.user_id = tf.origin_cfplanner_id
											AND tui.user_id = tc.parent_id)	<!-- 兼容之前老版本基本法  老基本法对应的是上上级  feeRate=5 -->	 
									 ELSE 
										(SELECT
												tui.user_id
											FROM
												tcrm_user_info tui,
												tcim_fee tf
											WHERE
													tf.bill_id = temp.billId
											AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
											AND tf.fee_type = '1002'
											AND tui.user_id = tf.origin_cfplanner_id)
									END)
						 WHEN 
								'1005'
						 THEN 
								(SELECT
										tui.user_id
									FROM
										tcrm_user_info tui,
										tcim_fee tf
									WHERE
											tf.bill_id = temp.billId
									AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
									AND tf.fee_type = '1005'
									AND tui.user_id = tf.origin_cfplanner_id)
						 WHEN 
								'1006' 
						 THEN 
								(SELECT
										tui.user_id
									FROM
										tcrm_user_info tui,
										tcim_fee tf
									WHERE
											tf.bill_id = temp.billId
									AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
									AND tf.fee_type = '1006'
									AND tui.user_id = tf.low_user_id)
						 END AS userId,						 
				<!-- 查询客户头像和理财师头像 -->
				 CASE temp.minFeeType 
							 WHEN
									'1001' 
							 THEN 
									(SELECT
											ti.head_image
										FROM
											tcrm_investor ti
										WHERE
											ti.user_id = tpir.user_id)
							 WHEN 
									'1002' 									
							 THEN  (CASE TEMP.feeRate 
							 		WHEN 5 THEN
										(SELECT
												ti.head_image
											FROM
												tcrm_investor ti,
												tcrm_cfplanner tc,
												tcim_fee tf
											WHERE
													tf.bill_id = temp.billId
											AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
											AND tf.fee_type = '1002'
											AND tc.user_id = tf.origin_cfplanner_id
											AND ti.user_id = tc.parent_id)<!-- 兼容之前老版本基本法  老基本法对应的是上上级  feeRate=5 -->	 
									 ELSE 
										(SELECT
												ti.head_image
											FROM
												tcrm_investor ti,
												tcim_fee tf
											WHERE
													tf.bill_id = temp.billId
											AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
											AND tf.fee_type = '1002'
											AND ti.user_id = tf.origin_cfplanner_id)
									END)
							 WHEN 
									'1005' 
							 THEN 
									(SELECT
											ti.head_image
										FROM
											tcrm_investor ti,
											tcim_fee tf
										WHERE
												tf.bill_id = temp.billId
										AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
										AND tf.fee_type = '1005'
										AND ti.user_id = tf.origin_cfplanner_id)
							 WHEN 
									'1006' 
							 THEN 
									(SELECT
											ti.head_image
										FROM
											tcrm_investor ti,
											tcim_fee tf
										WHERE
												tf.bill_id = temp.billId
										AND tf.profit_cfplanner_id = temp.profit_cfplanner_id
										AND tf.fee_type = '1006'
										AND ti.user_id = tf.low_user_id)
							 END AS headImage
			FROM
				(
					SELECT
						tf.bill_id AS billId,
						tf.profit_cfplanner_id,
						tf.low_type AS lowType,
						tf.fee_rate AS feeRate,
						MIN(tf.fee_type) AS minFeeType,
						SUM(tf.fee_amount) AS feeAmountSum
					FROM
						tcim_fee tf
					WHERE
						tf.profit_cfplanner_id = #{userId,jdbcType=VARCHAR}
					AND tf.bill_id = #{investId,jdbcType=VARCHAR}
					GROUP BY tf.profit_cfplanner_id
				) temp,
				tcim_product_invest_record tpir,
				tcim_org_info toi,
				tcim_product tp
			WHERE
				  temp.billId = tpir.invest_id
			AND tpir.platfrom = toi.org_number
			AND tpir.product_id = tp.product_id
	</select>	
	
	<!-- 查理财师的最近一笔交易时间 -->
	 <select id="selectTranRecordDate" resultType="Date" parameterType="java.lang.String">
<!--         SELECT start_time FROM tcim_product_invest_record where user_id=#{userId,jdbcType=VARCHAR} ORDER BY start_time DESC limit 1; -->
        		SELECT
				tpir.start_time AS startTime
			FROM
				(
					SELECT
						tf.bill_id AS billId,
						tf.profit_cfplanner_id,
						MIN(tf.fee_type) AS minFeeType,
						SUM(tf.fee_amount) AS feeAmountSum
					FROM
						tcim_fee tf
					WHERE
						tf.profit_cfplanner_id = #{userId,jdbcType=VARCHAR}
					GROUP BY
						tf.bill_id
					HAVING feeAmountSum > 0
				) temp,
				tcim_product_invest_record tpir,
				tcim_org_info toi
			WHERE
				  temp.billId = tpir.invest_id
			AND toi.org_number = tpir.platfrom		
			ORDER BY
				tpir.start_time DESC
   			LIMIT 1
     </select>
     
     <!-- 查理财师的最近一笔回款时间 -->
	 <select id="selectPaymentDate" resultType="Date" parameterType="java.lang.String">
<!--         SELECT end_time FROM tcim_product_invest_record where user_id=#{userId,jdbcType=VARCHAR} ORDER BY end_time limit 1; -->
		    SELECT
					temp.endTime
				FROM
					(
						SELECT
							tpir.end_time AS endTime
							FROM
								tcim_product_invest_record tpir,
								tcrm_investor ti
							WHERE
								ti.cfplanner = #{userId,jdbcType=VARCHAR}
							AND ti.user_id = tpir.user_id AND tpir.`status` = 3
						UNION
							SELECT
								tpir.end_time AS endTime
							FROM
								tcim_product_invest_record tpir,
								tcrm_cfplanner tc
							WHERE
								tc.parent_id = #{userId,jdbcType=VARCHAR}
							AND tc.user_id = tpir.user_id	AND tpir.`status` = 3
					) temp  		
					ORDER BY
					endTime DESC
		 LIMIT 1
     </select>
     
     
      <!-- 跟理财师有关的最近交易记录（包括下级投资） -->
	 <select id="newTranRecordDate" resultType="Date" parameterType="java.lang.String">
        			SELECT
				tpir.start_time AS startTime
			FROM
				(
					SELECT
						tf.bill_id AS billId,
						tf.profit_cfplanner_id,
						MIN(tf.fee_type) AS minFeeType,
						SUM(tf.fee_amount) AS feeAmountSum
					FROM
						tcim_fee tf
					WHERE
						tf.profit_cfplanner_id = #{userId,jdbcType=VARCHAR} 
					GROUP BY
						tf.bill_id
					HAVING feeAmountSum > 0
				) temp,
				tcim_product_invest_record tpir
			WHERE
				  temp.billId = tpir.invest_id
			ORDER BY
				tpir.start_time DESC
			LIMIT 1;
     </select>
     
     <!-- 本月收入-->
     <select id="queryMonthIncome" resultType="BigDecimal">
		select IFNULL(SUM(amount),0) total_amount
		from (
	
		SELECT sum(fee_amount) amount from tcim_feedetail where
		<if test=" thisMonth != null and thisMonth != '' ">
			date_format(create_time, '%Y-%m')=#{thisMonth,jdbcType=VARCHAR} and
		</if>
		profit_cfplanner_id =#{userId,jdbcType=VARCHAR}
	
		union all SELECT IFNULL(sum(trans_amount),0) amount
		from tac_balance_record where
		<if test=" thisMonth != null and thisMonth != '' ">
			date_format(create_time, '%Y-%m')=#{thisMonth,jdbcType=VARCHAR} and
		</if>
		user_id=#{userId,jdbcType=VARCHAR} 
		and ( create_type=0 and trans_type in (3,4,14,17) 
		 )
	
		union all SELECT IFNULL(sum(trans_amount),0)
		amount from tac_offline_reward_draft where 
		<if test=" thisMonth != null and thisMonth != '' ">
		   date_format(reward_time, '%Y-%m')=#{thisMonth,jdbcType=VARCHAR} and
		</if>
		user_id=#{userId,jdbcType=VARCHAR}
		
		union all SELECT sum(fee_amount) amount from tcim_insurance_feedetail where 
		<if test=" thisMonth != null and thisMonth != '' ">
			date_format(create_time, '%Y-%m')=#{thisMonth,jdbcType=VARCHAR} and 
		</if>
		profit_cfplanner_id = #{userId,jdbcType=VARCHAR} 
	
		) t
    </select>
    
    	 <!-- 累计收入汇总-->
    <select id="queryAllTotalIncome" resultType="BigDecimal">
		<![CDATA[	 SELECT
		  (
		    SELECT
		      IFNULL(SUM(tf.fee_amount), 0)
		    FROM
		      tcim_feedetail tf
		    WHERE
		      tf.profit_cfplanner_id = tc.user_id  AND tf.create_time > tc.create_time AND tf.create_time > '2016-08-01 00:00:00' 
		  ) + (
		    SELECT
		      IFNULL(SUM(tif.fee_amount), 0)
		    FROM
		      tcim_insurance_feedetail tif
		    WHERE
		      tif.profit_cfplanner_id = tc.user_id AND tif.create_time > tc.create_time AND tif.create_time > '2016-08-01 00:00:00' 
		  ) + (
		    SELECT
		      IFNULL(SUM(tord.trans_amount), 0)
		    FROM
		      tac_offline_reward_draft tord
		    WHERE
		      tord.user_id = tc.user_id  AND tord.reward_time > tc.create_time AND tord.reward_time > '2016-08-01 00:00:00' 
		  ) + (
		    SELECT
		      IFNULL(sum(trans_amount), 0)
		    FROM
		      tac_balance_record tbr
		    WHERE
		      tbr.user_id = tc.user_id
		    AND (
		      (
		        tbr.create_type = 0
		        AND tbr.trans_type IN (3, 4, 14, 17)
		        AND tbr.create_time >= '2017-01-01 00:00:00'
		      )
		      OR (
		        tbr.create_time > tc.create_time
		        AND tbr.create_time > '2016-08-01 00:00:00'
		        AND tbr.create_time < '2017-01-01 00:00:00'
		        AND (
		          (
		            tbr.trans_type IN (12, 15)
		            AND tbr.create_type = 1
		          )
		          OR tbr.trans_type IN (3, 4, 14)
		        )
		      )
		    )
		  ) AS totalAmount
		FROM
		  tcrm_cfplanner tc
		WHERE
		  tc.user_id = #{userId} 
		  ]]>
     </select>
      
     <select id="querySignRecordAmount" resultType="BigDecimal">
	    SELECT
			IFNULL(SUM(invest_amt), 0)
		FROM
			tcim_product_invest_record tpir,
			tcim_product tp
		WHERE
			tpir.user_id = #{userId}
		AND tp.product_id = tpir.product_id
		AND tp.dead_line_min_value >= 30
		AND tpir.start_time >= #{startTime}
	</select>
	
	<update id="updatePlatformBouns" parameterType="com.linkwee.api.request.cim.PlatformBounsRequest" >
		UPDATE tcim_product_invest_record
		SET virtual_paltform_bouns = #{virtualPlatformBouns}
		WHERE invest_id = #{investId} 
		AND user_id = #{userId}
	</update>
	
	<select id="querySignRecordAmount460" resultType="BigDecimal">
	    SELECT
			IFNULL(SUM(invest_amt), 0)
		FROM
			tcim_product_invest_record tpir,
			tcim_product tp
		WHERE
			tpir.user_id = #{userId}
		AND tp.product_id = tpir.product_id
		AND tp.dead_line_min_value >= 30
		AND tpir.invest_amt >= 30000
		AND tpir.start_time >= #{startTime}
	</select>
	
	<select id="queryHotInvestList" resultType="com.linkwee.api.response.tc.HotInvestResponse">
	    SELECT
			*
		FROM
			(
				(
					SELECT
						tin.price AS amount,
						tipi.product_name AS productName,
						'' AS orgName,
						'' AS term,
						tin.creat_time AS createTime,
						tui.user_name AS userName,
						tui.mobile,
						2 AS type
					FROM
						tcim_insurance_notify tin,
						tcim_insurance_policy_info tipi,
						tcrm_user_info tui
					WHERE
						tin.insure_num = tipi.insure_num
					AND tin.user_id = tui.user_id
					AND tin.notify_type = 9
					ORDER BY
						tin.creat_time DESC
					LIMIT 20
				)
				UNION ALL
					(
						SELECT
							tpir.invest_amt AS amount,
							'' AS productName,
							toi.`name` AS orgName,
							tp.dead_line_min_value AS term,
							tpir.start_time AS createTime,
							tui.user_name AS userName,
							tui.mobile,
							1 AS type
						FROM
							tcim_product_invest_record tpir,
							tcim_product tp,
							tcim_org_info toi,
							tcrm_user_info tui
						WHERE
							tpir.user_id = tui.user_id
						AND toi.org_number = tpir.platfrom
						AND tpir.product_id = tp.product_id
						AND toi.`status` = 1
						AND toi.org_gray_status = 0
						ORDER BY
							tpir.id DESC
						LIMIT 100
					)
			) temp
		ORDER BY
			createTime DESC
	</select>

	<select id="investingOrgCount" resultType="int">
		SELECT
			COUNT(DISTINCT toi.org_number)
		FROM
			tcim_org_info toi,
			tcim_product_invest_record tpir
		WHERE
		tpir. STATUS IN (1, 2, 4)
		AND toi. STATUS = 1
		AND tpir.user_id = #{userId}
		AND tpir.platfrom = toi.org_number
		<choose>
			<when test="isGrayUser == true">
				AND toi.org_gray_status IN (0,1)
			</when>
			<otherwise>
				AND toi.org_gray_status = 0
			</otherwise>
		</choose>
	</select>

	<select id="homepageInvestList" resultType="com.linkwee.api.response.HomePageInvestResponse">
		SELECT
            tpir.invest_amt AS amount,
            tpir.profit AS profit,
            tpir.start_time AS createTime,
            tab.id_card AS idCard,
            tab.user_name AS userName
        FROM
            tcim_product_invest_record tpir,
            tcim_org_info toi,
            tac_account_bind tab
        WHERE
            toi.org_number = tpir.platfrom
        AND toi.`status` = 1
        AND toi.org_gray_status = 0
        AND tab.user_id = tpir.user_id
        AND tab.id_card IS NOT NULL
        ORDER BY
            tpir.id DESC
        LIMIT 100
	</select>
</mapper>